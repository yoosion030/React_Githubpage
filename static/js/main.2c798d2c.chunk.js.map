{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","money","setMoney","house","setHouse","car","setCar","className","onClick","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAoDeA,MAjDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACRC,EADQ,KACDC,EADC,OAEWF,mBAAS,GAFpB,mBAERG,EAFQ,KAEDC,EAFC,OAGOJ,mBAAS,GAHhB,mBAGRK,EAHQ,KAGHC,EAHG,KA4Bb,OACE,uBAAMC,UAAU,MAAhB,UACE,oBAAIA,UAAU,QAAd,6CACA,0BAASA,UAAU,QAAnB,UACE,uDAAWN,EAAX,mBACA,8DAAaE,EAAb,aACA,8DAAaE,EAAb,gBAEF,8BACE,wBAAQE,UAAU,MAAMC,QAhC9B,WACAN,EAASD,EAAM,IA+BT,mCAGF,sBAAKM,UAAU,MAAf,UACE,wBAAQA,UAAU,MAAMC,QA/B9B,WACKP,EAAQ,IAAM,EACfQ,MAAM,wBAGNP,EAASD,EAAM,KACfG,EAASD,EAAM,KAyBb,mDACA,wBAAQI,UAAU,MAAMC,QAvB9B,WACKP,EAAM,GAAG,EACVQ,MAAM,wBAGNP,EAASD,EAAM,IACfK,EAAOD,EAAI,KAiBT,yDCjCOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2c798d2c.chunk.js","sourcesContent":["import React, {useState} from 'react'; // useState 선언 \nimport './App.css';\n\nfunction App() {\n  let [money, setMoney] = useState(0); // [state이름, state값을 변경해주는 함수]\n  let [house, setHouse] = useState(0); // state를 쓰는 이유 : 데이터가 바뀌면 재렌더링이 자동으로 되기 때문\n  let [car, setCar] = useState(0); // 변수의 값이 새로고침 없이 자동으로 업데이트가 되기때문\n\n  function getMoney(){\n  setMoney(money+1)\n   // 돈 줍기 버튼 클릭 시 money를 변경해주는 setMoney함수에 현재 money의 값에 1을 더한 값으로 변경하게 함\n  }\n\n  function buyHouse(){\n    if(money - 100 < 0){ // 구매 후 돈이 음수 이면 alert 창 실행\n      alert('돈 더줘');\n    }\n    else{\n      setMoney(money-100)\n      setHouse(house+1)\n    }\n  }\n  function buyCar(){\n    if(money-50<0){\n      alert('돈 더줘');\n    }\n    else{\n      setMoney(money-50)\n      setCar(car+1)\n    }\n  }\n  return (\n    <main className=\"App\">\n      <h1 className=\"title\">거지 키우기</h1>\n      <section className=\"items\">\n        <p>현재 돈 : {money} 억원</p> \n        <p>내가 산 집 : {house} 채</p>\n        <p>내가 산 차 : {car} 대</p>\n      </section>\n      <div>\n        <button className=\"btn\" onClick={getMoney}>돈 줍기</button> \n        {/* 버튼 클릭 시 getMoney 함수 실행 */}\n      </div>\n      <div className=\"box\">\n        <button className=\"btn\" onClick={buyHouse}>집 사기 : 100억원</button>\n        <button className=\"btn\" onClick={buyCar}>차 사기 : 50억원</button>\n      </div>\n    </main>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}